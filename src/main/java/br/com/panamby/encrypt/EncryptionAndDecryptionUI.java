package br.com.panamby.encrypt;

import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;

/**
 *
 * @author Rafael
 */
public class EncryptionAndDecryptionUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form EncryptionAndDecryptionUI
     */
    public EncryptionAndDecryptionUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        enterEncrypt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        enterSecretKeyEncrypt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        resultEncrypt = new javax.swing.JTextField();
        buttonEncrypt = new javax.swing.JButton();
        buttonClean1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        resultDecryption = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        buttonDecrypt = new javax.swing.JButton();
        enterSecretKeyDecrypt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        passwordEncrypted = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonClean = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Encryption and Decryption");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(543, 440));

        jPanel3.setBackground(new java.awt.Color(51, 102, 255));
        jPanel3.setName("Encryption and Decryption"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Secret key to encrypt");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Jasypt Encryption");

        enterEncrypt.setText("Enter plain text to hash");
        enterEncrypt.setToolTipText("");
        enterEncrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        enterEncrypt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                enterEncryptFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                enterEncryptFocusLost(evt);
            }
        });
        enterEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterEncryptActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Enter plain text to Encrypt");

        enterSecretKeyEncrypt.setText("Enter Secret Key");
        enterSecretKeyEncrypt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                enterSecretKeyEncryptFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                enterSecretKeyEncryptFocusLost(evt);
            }
        });
        enterSecretKeyEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterSecretKeyEncryptActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Encrypted String:");

        resultEncrypt.setText("Result goes here");
        resultEncrypt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                resultEncryptFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                resultEncryptFocusLost(evt);
            }
        });
        resultEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultEncryptActionPerformed(evt);
            }
        });

        buttonEncrypt.setBackground(new java.awt.Color(51, 102, 255));
        buttonEncrypt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonEncrypt.setForeground(new java.awt.Color(255, 255, 255));
        buttonEncrypt.setText("Encrypt");
        buttonEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEncryptActionPerformed(evt);
            }
        });

        buttonClean1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonClean1.setText("Clean");
        buttonClean1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClean1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(enterEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(enterSecretKeyEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(resultEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(buttonClean1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterSecretKeyEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonClean1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        enterEncrypt.getAccessibleContext().setAccessibleDescription("");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        resultDecryption.setText("Result goes here");
        resultDecryption.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                resultDecryptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                resultDecryptionFocusLost(evt);
            }
        });
        resultDecryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultDecryptionActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Result:");

        buttonDecrypt.setBackground(new java.awt.Color(51, 102, 255));
        buttonDecrypt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonDecrypt.setForeground(new java.awt.Color(255, 255, 255));
        buttonDecrypt.setText("Decrypt");
        buttonDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDecryptActionPerformed(evt);
            }
        });

        enterSecretKeyDecrypt.setText("Enter Secret Key");
        enterSecretKeyDecrypt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                enterSecretKeyDecryptFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                enterSecretKeyDecryptFocusLost(evt);
            }
        });
        enterSecretKeyDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterSecretKeyDecryptActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Secret Key Used during Encryption");

        passwordEncrypted.setText("Jasypt Encrypted Password");
        passwordEncrypted.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordEncryptedFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordEncryptedFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Enter the Jasypt Encrypted Text");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Jasypt Decryption");

        buttonClean.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonClean.setText("Clean");
        buttonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(enterSecretKeyDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(passwordEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(buttonDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(buttonClean, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordEncrypted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterSecretKeyDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonClean, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void enterSecretKeyEncryptActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void resultEncryptActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void enterSecretKeyDecryptActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void resultDecryptionActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void enterEncryptActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            


    private void buttonEncryptActionPerformed(java.awt.event.ActionEvent evt) {                                              

        String enterEncryptText = enterEncrypt.getText();
        String enterSecretKeyEncryptText = enterSecretKeyEncrypt.getText();

        StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();
        encryptor.setPassword(enterSecretKeyEncryptText);
        
        if (!enterEncrypt.getText().equals("Enter plain text to hash") && !enterSecretKeyEncrypt.getText().equals("Enter Secret Key")) {
        	
        	resultEncrypt.setText(encryptor.encrypt(enterEncryptText));
        }        
    }                                             

    private void buttonDecryptActionPerformed(java.awt.event.ActionEvent evt) {                                              

        String passwordEncryptedText = passwordEncrypted.getText();
        String enterSecretKeyDecryptText = enterSecretKeyDecrypt.getText();

        StandardPBEStringEncryptor decryptor = new StandardPBEStringEncryptor();
        decryptor.setPassword(enterSecretKeyDecryptText);

        if (!passwordEncrypted.getText().equals("Jasypt Encrypted Password") && !enterSecretKeyDecrypt.getText().equals("Enter Secret Key")) {
            
            resultDecryption.setText(decryptor.decrypt(passwordEncryptedText));
        }
    }                                             

    private void buttonCleanActionPerformed(java.awt.event.ActionEvent evt) {                                            

    	passwordEncrypted.setText("Jasypt Encrypted Password");
        enterSecretKeyDecrypt.setText("Enter Secret Key");
        resultDecryption.setText("Result goes here");
    }                                           

    private void buttonClean1ActionPerformed(java.awt.event.ActionEvent evt) {                                             

        enterEncrypt.setText("Enter plain text to hash");
        enterSecretKeyEncrypt.setText("Enter Secret Key");
        resultEncrypt.setText("Result goes here");
    }                                            

    private void enterEncryptFocusGained(java.awt.event.FocusEvent evt) {                                         
        
        if (enterEncrypt.getText().
                equals("Enter plain text to hash")) {
            enterEncrypt.setText("");
        }
    }                                        

    private void enterEncryptFocusLost(java.awt.event.FocusEvent evt) {                                       
        
        if (enterEncrypt.getText().equals("")) {
            enterEncrypt.setText("Enter plain text to hash");
        }
    }                                      

    private void enterSecretKeyEncryptFocusGained(java.awt.event.FocusEvent evt) {                                                  
        
        if (enterSecretKeyEncrypt.getText().
                equals("Enter Secret Key")) {
            enterSecretKeyEncrypt.setText("");
        }
    }                                                 

    private void enterSecretKeyEncryptFocusLost(java.awt.event.FocusEvent evt) {                                                
        
        if (enterSecretKeyEncrypt.getText().equals("")) {
            enterSecretKeyEncrypt.setText("Enter Secret Key");
        }
    }                                               

    private void resultEncryptFocusGained(java.awt.event.FocusEvent evt) {                                          
        
        if (resultEncrypt.getText().
                equals("Result goes here")) {
            resultEncrypt.setText("");
        }
    }                                         

    private void resultEncryptFocusLost(java.awt.event.FocusEvent evt) {                                        
        
        if (resultEncrypt.getText().equals("")) {
            resultEncrypt.setText("Result goes here");
        }
    }                                       

    private void passwordEncryptedFocusGained(java.awt.event.FocusEvent evt) {                                              
        
        if (passwordEncrypted.getText().
                equals("Jasypt Encrypted Password")) {
            passwordEncrypted.setText("");
        }
    }                                             

    private void passwordEncryptedFocusLost(java.awt.event.FocusEvent evt) {                                            
        
        if (passwordEncrypted.getText().equals("")) {
            passwordEncrypted.setText("Jasypt Encrypted Password");
        }
    }                                           

    private void enterSecretKeyDecryptFocusGained(java.awt.event.FocusEvent evt) {                                                  
        
        if (enterSecretKeyDecrypt.getText().
                equals("Enter Secret Key")) {
            enterSecretKeyDecrypt.setText("");
        }
    }                                                 

    private void enterSecretKeyDecryptFocusLost(java.awt.event.FocusEvent evt) {                                                
        
        if (enterSecretKeyDecrypt.getText().equals("")) {
            enterSecretKeyDecrypt.setText("Enter Secret Key");
        }
    }                                               

    private void resultDecryptionFocusGained(java.awt.event.FocusEvent evt) {                                             
        
        if (resultDecryption.getText().
                equals("Result goes here")) {
            resultDecryption.setText("");
        }
    }                                            

    private void resultDecryptionFocusLost(java.awt.event.FocusEvent evt) {                                           
        
        if (resultDecryption.getText().equals("")) {
            resultDecryption.setText("Result goes here");
        }
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncryptionAndDecryptionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncryptionAndDecryptionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncryptionAndDecryptionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncryptionAndDecryptionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncryptionAndDecryptionUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    javax.swing.JButton buttonClean;
    javax.swing.JButton buttonClean1;
    javax.swing.JButton buttonDecrypt;
    javax.swing.JButton buttonEncrypt;
    javax.swing.JTextField enterEncrypt;
    javax.swing.JTextField enterSecretKeyDecrypt;
    javax.swing.JTextField enterSecretKeyEncrypt;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JTextField passwordEncrypted;
    javax.swing.JTextField resultDecryption;
    javax.swing.JTextField resultEncrypt;
    // End of variables declaration                   
}